import React, {useContext} from 'react';
import Head from 'next/head';
import {serverSideTranslations} from 'next-i18next/serverSideTranslations';
import PartnersBar from '@/components/index/Bars/PartnersBar/PartnersBar';
import * as CommonStyled from '@/styles/commonStyles';
import * as Styled from '@/styles/styledPage/IndexPage';
import {useTranslation} from 'next-i18next';
import RecommendUsBar from '@/components/index/Bars/RecommendUsBar/RecommendUsBar';
import {AppContext} from '@/context/AppContext';
import LastNewsGallery from '@/components/index/LastNewsGallery/LastNewsGallery';

const Home = () => {
    const {t} = useTranslation();
    const {
        app: {
            lastNews: {loading: lastNewsLoading, data: lastNewsData},
        },
    } = useContext(AppContext);

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Styled.IndexPage>
                <Styled.NewsGallery>
                    <LastNewsGallery
                        lastNewsLoading={lastNewsLoading}
                        lastNews={lastNewsData}
                    />
                </Styled.NewsGallery>
                <Styled.RecommendUsSection>
                    <CommonStyled.SectionSubtitle belt>
                        {t<string>('index:recommendUsSection.title')}
                    </CommonStyled.SectionSubtitle>
                    <RecommendUsBar />
                </Styled.RecommendUsSection>
                <Styled.PartnersSection>
                    <CommonStyled.SectionSubtitle belt>
                        {t<string>('index:partnersSection.title')}
                    </CommonStyled.SectionSubtitle>
                    <PartnersBar />
                </Styled.PartnersSection>
            </Styled.IndexPage>
        </div>
    );
};

export const getStaticProps = async ({locale}: {locale: string}) => ({
    props: {
        ...(await serverSideTranslations(locale, [
            'index',
            'common',
            'layout',
        ])),
    },
});

export default Home;
